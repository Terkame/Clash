# 注意规则在满足自己需求情况下，尽量做到精简，不要过度复杂，以免影响性能。
# 机场订阅
proxy-providers:
  cordcloud:
    url: "https://www.ccsub.org/link/cmB87qAcgrcAmjER?clash=1"
    type: http
    interval: 86400
    health-check:
      enable: true
      url: https://www.gstatic.com/generate_204
      interval: 300
    proxy: 直连

# 节点信息
proxies:
  - {name: 直连, type: direct}

# 全局配置 
port: 7890
socks-port: 7891
redir-port: 7892
mixed-port: 7893
tproxy-port: 7894
allow-lan: true
bind-address: "*"
ipv6: false
unified-delay: true
tcp-concurrent: true
log-level: warning
find-process-mode: 'off'
# interface-name: en0
global-client-fingerprint: chrome
keep-alive-idle: 600
keep-alive-interval: 15
disable-keep-alive: false
profile:
  store-selected: true
  store-fake-ip: true

# 控制面板
external-controller: 0.0.0.0:9090
secret: "789456123"
external-ui: "/etc/mihomo/run/ui"
external-ui-name: zashboard
external-ui-url: "https://github.com/Zephyruso/zashboard/archive/refs/heads/gh-pages.zip"

# 嗅探
sniffer:
  enable: true
  sniff:
    HTTP:
      ports: [80, 8080-8880]
      override-destination: true
    TLS:
      ports: [443, 8443]
    QUIC:
      ports: [443, 8443]
  force-domain:
    - "+.v2ex.com"
  skip-domain:
    - "+.baidu.com"

# 入站  
tun:
  enable: true
  # system/gvisor/mixed
  stack: mixed
  dns-hijack: ["any:53", "tcp://any:53"]
  auto-route: true
  auto-redirect: true
  auto-detect-interface: true

# DNS模块
dns:
  enable: true
  listen: 0.0.0.0:1053
  ipv6: false
  respect-rules: true
  enhanced-mode: fake-ip
  fake-ip-range: 28.0.0.1/8
  fake-ip-filter-mode: blacklist
  fake-ip-filter:
    - "rule-set:private_domain,cn_domain"
    - "+.msftconnecttest.com"
    - "+.msftncsi.com"
    - "time.*.com"
  default-nameserver:
    - 223.5.5.5
  proxy-server-nameserver:
    - https://223.5.5.5/dns-query
  # namesever尽量用运营商提供的DNS
  nameserver:
    - 223.5.5.5
    - 119.29.29.29
 
# 出站策略
# 注意锚点必须放在引用的上方，可以集中把锚点全部放yaml的顶部。
pr: &pr {type: select, proxies: [🚀 默认代理, ♻️ 自动智选, 🇭🇰 香港智选, 🇯🇵 日本智选, 🇺🇲 美国智选, 🇨🇳 台湾智选, 🇸🇬 狮城智选, 🌐 全部节点, 直连]}
proxy-groups:
  - {name: 🚀 默认代理, type: select, proxies: [♻️ 自动智选, 🇭🇰 香港智选, 🇯🇵 日本智选, 🇺🇲 美国智选, 🇨🇳 台湾智选, 🇸🇬 狮城智选, 🌐 全部节点]}
  - {name: 💬 Ai, type: select, proxies: [🇺🇲 美国智选, 🇺🇲 美国Trojan]}
  - {name: 📹 YouTube, <<: *pr}
  - {name: 📲 Telegram, <<: *pr}
  - {name: 🍀 Google, <<: *pr}
  - {name: 🍎 Apple, <<: *pr}
  - {name: 🪟 Microsoft, <<: *pr}
  - {name: 🎮 Game, <<: *pr}
  - {name: 🐟 漏网之鱼, <<: *pr}
  - {name: 🇭🇰 香港智选, type: smart, include-all: true, uselightgbm: ture, collectdata: true, interval: 300, filter: "(?=.*(港|HK|(?i)Hong))^((?!专线).)*$"}
  - {name: 🇯🇵 日本智选, type: smart, include-all: true, uselightgbm: ture, collectdata: true, interval: 300, filter: "(?=.*(日|JP|(?i)Japan))^((?!专线).)*$" }
  - {name: 🇺🇲 美国智选, type: smart, include-all: true, uselightgbm: ture, collectdata: true, interval: 300, filter: "(?=.*(美|US|(?i)States|America))^((?!专线).)*$"}
  - {name: 🇺🇲 美国Trojan, type: smart, include-all: true, uselightgbm: ture, collectdata: true, interval: 300, filter: "(?=.*(美|US|(?i)States|America))(?=.*Trojan)^((?!专线).)*$"}
  - {name: 🇨🇳 台湾智选, type: smart, include-all: true, uselightgbm: ture, collectdata: true, interval: 300, filter: "(?=.*(台|新北|彰化|TW|Taiwan))^((?!专线).)*$" }
  - {name: 🇸🇬 狮城智选, type: smart, include-all: true, uselightgbm: ture, collectdata: true, interval: 300, filter: "(新加坡|坡|狮城|SG|Singapore)" }
  - {name: ♻️ 自动智选, type: smart, include-all: true, uselightgbm: ture, collectdata: true, interval: 300, filter: "^((?!(专线)).)*$"}
  - {name: 🇩🇪 德国节点, type: select, include-all: true,filter: (德国)}
  - {name: 🌐 全部节点, type: select, include-all: true}

# 规则匹配
# 此规则部分没有做防泄露处理，因为弊严重大于利！
rules:
  - RULE-SET,private_domain,直连
  - RULE-SET,apple_domain,🍎 Apple
  - RULE-SET,ai,💬 Ai
  - RULE-SET,youtube_domain,📹 YouTube
  - RULE-SET,google_domain,🍀 Google
  - RULE-SET,microsoft_domain,🪟 Microsoft
  - RULE-SET,telegram_domain,📲 Telegram
  - RULE-SET,playstation,🎮 Game
  - RULE-SET,nintendo,🎮 Game
  - RULE-SET,gfw_domain,🚀 默认代理
  - RULE-SET,geolocation-!cn,🚀 默认代理
  - RULE-SET,cn_domain,直连
  - RULE-SET,google_ip,🍀 Google,no-resolve
  - RULE-SET,telegram_ip,📲 Telegram,no-resolve
  - RULE-SET,cn_ip,直连
  - MATCH,🐟 漏网之鱼

# 规则集
rule-anchor:
  ip: &ip {type: http, interval: 86400, behavior: ipcidr, format: mrs}
  domain: &domain {type: http, interval: 86400, behavior: domain, format: mrs}
  class: &class {type: http, interval: 86400, behavior: classical, format: text}
rule-providers: 
  private_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/private.mrs"}
  ai: {  <<: *domain, url: "https://github.com/MetaCubeX/meta-rules-dat/raw/refs/heads/meta/geo/geosite/category-ai-!cn.mrs" }
  youtube_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/youtube.mrs"}
  google_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/google.mrs"}
  telegram_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/telegram.mrs"}
  playstation: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/playstation.mrs"}
  nintendo: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/nintendo.mrs"}
  microsoft_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/microsoft.mrs"}
  apple_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/apple-cn.mrs"}
  gfw_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/gfw.mrs"}
  geolocation-!cn: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/geolocation-!cn.mrs"}
  cn_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/cn.mrs"}
  
  cn_ip: { <<: *ip, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/cn.mrs"}
  google_ip: { <<: *ip, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/google.mrs"}
  telegram_ip: { <<: *ip, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/telegram.mrs"}